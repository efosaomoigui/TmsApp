{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Efe-Dev\\\\Documents\\\\simplereacjs\\\\TmsApp\\\\src\\\\views\\\\lafargeLocator.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\";\nimport { Card, FormGroup } from \"components/Card/Card.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\n\nclass lafargeLocator extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.findLocafindLocationByDrivertion = this.findLocationByDriver.bind(this);\n    this.findLocationByAsset = this.findLocationByAsset.bind(this);\n    this.state = {\n      dAssetId: '',\n      dLongitude: '',\n      dLatitude: '',\n      xDriver: '',\n      xAssetId: '',\n      address: '',\n      point: '',\n      Timestamp: '',\n      distance: ''\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({\n      [nam]: val\n    });\n  }\n\n  findLocationByDriver() {\n    var assetid = this.state.xAssetId;\n    var driverid = this.state.xDriver;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer my-token',\n        'My-Custom-Header': 'foobar'\n      },\n      body: JSON.stringify({\n        DriverId: driverid,\n        AssetId: assetid\n      })\n    };\n    fetch('http://localhost/TmsId.Api/api/LafargeTms/getTruckLocationByDriver', requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        address: data.CurrentAddress,\n        point: data.Longitude + ',' + data.Latitude,\n        Timestamp: data.TimeStamp\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error('There was an error!', error);\n    });\n  }\n\n  findLocationByAsset() {\n    var assetid = this.state.xAssetId;\n    var driverid = this.state.xDriver;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer my-token',\n        'My-Custom-Header': 'foobar'\n      },\n      body: JSON.stringify({\n        DriverId: driverid,\n        AssetId: assetid\n      })\n    };\n    fetch('http://localhost/TmsId.Api/api/LafargeTms/getTruckLocationByDriver', requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        address: data.CurrentAddress,\n        point: data.Longitude + ',' + data.Latitude,\n        Timestamp: data.TimeStamp\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error('There was an error!', error);\n    });\n  }\n\n  findDistance() {\n    var assetid = this.state.xAssetId;\n    var driverid = this.state.xDriver;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer my-token',\n        'My-Custom-Header': 'foobar'\n      },\n      body: JSON.stringify({\n        DriverId: driverid,\n        AssetId: assetid\n      })\n    };\n    fetch('http://localhost/TmsId.Api/api/LafargeTms/getDriverLocation', requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        address: data.CurrentAddress,\n        point: data.Longitude + ',' + data.Latitude,\n        Timestamp: data.TimeStamp\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error('There was an error!', error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Locate Distance\",\n      category: \"Find distance by using point (Long, Lat)\",\n      ctTableFullWidth: true,\n      ctTableResponsive: true,\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-12\"],\n        properties: [{\n          label: \"Longitude\",\n          type: \"text\",\n          name: \"dLongitude\",\n          bsClass: \"form-control\",\n          placeholder: \"\",\n          defaultValue: \"\",\n          disabled: false,\n          onChange: this.handleChange\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-12\"],\n        properties: [{\n          label: \"Latitude\",\n          type: \"text\",\n          name: \"dLatitude\",\n          bsClass: \"form-control\",\n          placeholder: \"\",\n          defaultValue: \"\",\n          disabled: false,\n          onChange: this.handleChange\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 1\n        }\n      }), /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-12\"],\n        properties: [{\n          label: \"Asset ID\",\n          type: \"text\",\n          name: \"dAssetId\",\n          bsClass: \"form-control\",\n          placeholder: \"\",\n          defaultValue: \"\",\n          disabled: false,\n          onChange: this.handleChange\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 1\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        bsStyle: \"danger\",\n        pullRight: true,\n        fill: true,\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, \"Get Distance\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Distance of Truck Asset ID: (\".concat(this.state.dAssetId, \") from Point (\").concat(this.state.dLongitude, \",\").concat(this.state.dLatitude, \")\"),\n      category: \"\",\n      ctTableFullWidth: true,\n      ctTableResponsive: true,\n      onChange: this.handleChange,\n      content: /*#__PURE__*/React.createElement(Table, {\n        hover: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 27\n        }\n      }, \"Distance From (Long/lat)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, this.state.distance)))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Find Location\",\n      category: \"Location by Asset & Driver\",\n      ctTableFullWidth: true,\n      ctTableResponsive: true,\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-12\"],\n        properties: [{\n          label: \"Truck/Asset\",\n          name: \"xAssetId\",\n          type: \"text\",\n          id: \"xDriver\",\n          bsClass: \"form-control\",\n          placeholder: \"\",\n          defaultValue: \"\",\n          disabled: false,\n          onChange: this.handleChange\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(FormInputs, {\n        ncols: [\"col-md-12\"],\n        properties: [{\n          label: \"driver\",\n          name: \"xDriver\",\n          id: \"xDriver\",\n          type: \"text\",\n          bsClass: \"form-control\",\n          placeholder: \"\",\n          defaultValue: \"\",\n          disabled: false,\n          onChange: this.handleChange\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 3\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        bsStyle: \"danger\",\n        pullRight: true,\n        fill: true,\n        type: \"button\",\n        onClick: this.findLocation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 23\n        }\n      }, \"Find Location\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"clearfix\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 23\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Location\",\n      ctTableFullWidth: true,\n      ctTableResponsive: true,\n      content: /*#__PURE__*/React.createElement(Table, {\n        hover: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 27\n        }\n      }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 27\n        }\n      }, \"Point (Long,Lat)\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 27\n        }\n      }, \"Timestamp\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }\n      }, this.state.address), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }\n      }, this.state.point), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }\n      }, this.state.Timestamp)))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default lafargeLocator;","map":{"version":3,"sources":["C:/Users/Efe-Dev/Documents/simplereacjs/TmsApp/src/views/lafargeLocator.jsx"],"names":["React","Component","Grid","Row","Col","Table","Card","FormGroup","Button","FormInputs","lafargeLocator","constructor","handleChange","bind","findLocafindLocationByDrivertion","findLocationByDriver","findLocationByAsset","state","dAssetId","dLongitude","dLatitude","xDriver","xAssetId","address","point","Timestamp","distance","event","setState","value","target","nam","name","val","assetid","driverid","requestOptions","method","headers","body","JSON","stringify","DriverId","AssetId","fetch","then","response","data","json","ok","error","message","status","Promise","reject","CurrentAddress","Longitude","Latitude","TimeStamp","catch","errorMessage","toString","console","findDistance","render","label","type","bsClass","placeholder","defaultValue","disabled","onChange","id","findLocation"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\";\n\nimport { Card, FormGroup} from \"components/Card/Card.jsx\";\nimport Button from \"components/CustomButton/CustomButton.jsx\";\nimport { FormInputs } from \"components/FormInputs/FormInputs.jsx\";\n\n\nclass lafargeLocator extends Component {\n\n  constructor(){\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.findLocafindLocationByDrivertion = this.findLocationByDriver.bind(this);\n    this.findLocationByAsset = this.findLocationByAsset.bind(this);\n\n    this.state = {\n      dAssetId: '',\n      dLongitude: '',\n      dLatitude: '',\n      xDriver:'',\n      xAssetId:'',\n      address:'',\n      point:'',\n      Timestamp:'',\n      distance:''\n    };\n\n  }\n\n  handleChange(event) \n  {\n    this.setState({value: event.target.value});\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({[nam]: val});\n  }\n\n  findLocationByDriver()\n  {\n    var assetid = this.state.xAssetId;\n    var driverid = this.state.xDriver;\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer my-token',\n          'My-Custom-Header': 'foobar'\n      },\n      body: JSON.stringify({ DriverId:driverid, AssetId: assetid})\n  };\n  fetch('http://localhost/TmsId.Api/api/LafargeTms/getTruckLocationByDriver', requestOptions)\n      .then(async response => {\n          const data = await response.json();\n\n          // check for error response\n          if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n          }\n\n          this.setState({ address: data.CurrentAddress, point: data.Longitude+','+data.Latitude, Timestamp: data.TimeStamp })\n      })\n      .catch(error => {\n          this.setState({ errorMessage: error.toString() });\n          console.error('There was an error!', error);\n      });\n  }\n\n  findLocationByAsset()\n  {\n    var assetid = this.state.xAssetId;\n    var driverid = this.state.xDriver;\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer my-token',\n          'My-Custom-Header': 'foobar'\n      },\n      body: JSON.stringify({ DriverId:driverid, AssetId: assetid})\n  };\n  fetch('http://localhost/TmsId.Api/api/LafargeTms/getTruckLocationByDriver', requestOptions)\n      .then(async response => {\n          const data = await response.json();\n\n          // check for error response\n          if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n          }\n\n          this.setState({ address: data.CurrentAddress, point: data.Longitude+','+data.Latitude, Timestamp: data.TimeStamp })\n      })\n      .catch(error => {\n          this.setState({ errorMessage: error.toString() });\n          console.error('There was an error!', error);\n      });\n  }\n\n  findDistance(){\n    var assetid = this.state.xAssetId;\n    var driverid = this.state.xDriver;\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { \n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer my-token',\n          'My-Custom-Header': 'foobar'\n      },\n      body: JSON.stringify({ DriverId:driverid, AssetId: assetid})\n  };\n  fetch('http://localhost/TmsId.Api/api/LafargeTms/getDriverLocation', requestOptions)\n      .then(async response => {\n          const data = await response.json();\n\n          // check for error response\n          if (!response.ok) {\n              // get error message from body or default to response status\n              const error = (data && data.message) || response.status;\n              return Promise.reject(error);\n          }\n\n          this.setState({ address: data.CurrentAddress, point: data.Longitude+','+data.Latitude, Timestamp: data.TimeStamp })\n      })\n      .catch(error => {\n          this.setState({ errorMessage: error.toString() });\n          console.error('There was an error!', error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col md={4}>\n              <Card\n                title=\"Locate Distance\"\n                category=\"Find distance by using point (Long, Lat)\"\n                ctTableFullWidth\n                ctTableResponsive\n                content={\n                  <div className=\"content\">\n                  <form>\n                    <FormInputs\n                      ncols={[\"col-md-12\"]}\n                      properties={[\n                        {\n                          label: \"Longitude\",\n                          type: \"text\",\n                          name:\"dLongitude\",\n                          bsClass: \"form-control\",\n                          placeholder: \"\",\n                          defaultValue: \"\",\n                          disabled: false,\n                          onChange:this.handleChange\n                        }\n                      ]}\n                    />\n\n<FormInputs\n                      ncols={[\"col-md-12\"]}\n                      properties={[\n                        {\n                          label: \"Latitude\",\n                          type: \"text\",\n                          name:\"dLatitude\",\n                          bsClass: \"form-control\",\n                          placeholder: \"\",\n                          defaultValue: \"\",\n                          disabled: false,\n                          onChange:this.handleChange\n                        }\n                      ]}\n                    />\n\n<FormInputs\n                      ncols={[\"col-md-12\"]}\n                      properties={[\n                        {\n                          label: \"Asset ID\",\n                          type: \"text\",\n                          name:\"dAssetId\",\n                          bsClass: \"form-control\",\n                          placeholder: \"\",\n                          defaultValue: \"\",\n                          disabled: false, \n                          onChange: this.handleChange\n                        }\n                      ]}\n                    />\n                    \n                    <Button bsStyle=\"danger\" pullRight fill type=\"submit\">\n                      Get Distance\n                    </Button>\n\t\t\t\t\t\n                    <div className=\"clearfix\" />\n                    \n                  </form>\n                  </div>\n                }\n              />\n            </Col>\n            <Col md={6}>\n            <Card\n                title={`Distance of Truck Asset ID: (${this.state.dAssetId}) from Point (${this.state.dLongitude},${this.state.dLatitude})`}\n                category=\"\"\n                ctTableFullWidth\n                ctTableResponsive\n                onChange={this.handleChange}\n                content={\n                  <Table hover>\n                    <thead>\n                      <tr>\n                          <th>Distance From (Long/lat)</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                <td>{this.state.distance}</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                }\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={4}>\n              <Card\n                title=\"Find Location\"\n                category=\"Location by Asset & Driver\"\n                ctTableFullWidth\n                ctTableResponsive\n                  content={\n                    <div className=\"content\">\n                    <form>\n                      <FormInputs\n                        ncols={[\"col-md-12\"]}\n                        properties={[\n                          {\n                            label: \"Truck/Asset\",\n                            name:\"xAssetId\",\n                            type: \"text\",\n                            id:\"xDriver\",\n                            bsClass: \"form-control\",\n                            placeholder: \"\",\n                            defaultValue: \"\",\n                            disabled: false,\n                            onChange:this.handleChange\n                          }\n                        ]}\n                      />\n  \n  <FormInputs\n                        ncols={[\"col-md-12\"]}\n                        properties={[\n                          {\n                            label: \"driver\",\n                            name:\"xDriver\",\n                            id:\"xDriver\",\n                            type: \"text\",\n                            bsClass: \"form-control\",\n                            placeholder: \"\",\n                            defaultValue: \"\",\n                            disabled: false,\n                            onChange:this.handleChange\n                          }\n                        ]}\n                      />\n                      \n                      <Button bsStyle=\"danger\" pullRight fill type=\"button\" onClick={this.findLocation}>\n                        Find Location\n                      </Button>\n            \n                      <div className=\"clearfix\" />\n                      \n                    </form>\n                    </div>\n                  }\n              />\n            </Col>\n            <Col md={6}>\n              <Card\n                title=\"Location\"\n                ctTableFullWidth\n                ctTableResponsive\n                content={\n                  <Table hover>\n                    <thead>\n                      <tr>\n                          <th>Address</th>\n                          <th>Point (Long,Lat)</th>\n                          <th>Timestamp</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                    <tr>\n                <td>{this.state.address}</td>\n                <td>{this.state.point}</td>\n                <td>{this.state.Timestamp}</td>\n                      </tr>\n                    </tbody>\n                  </Table>\n                }\n              />\n            </Col>\n          </Row>\n\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default lafargeLocator;\n"]},"metadata":{},"sourceType":"module"}